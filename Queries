/* Question 1: 

We want to understand more about the movies that families are watching. The following categories are considered family movies: Animation, Children, Classics, Comedy, Family and Music.

Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out

Direction for query formation: For this query, you will need 5 tables: Category, Film_Category, Inventory, Rental and Film. Your solution should have three columns: Film title, Category name and Count of Rentals.*/

/*Query 1/*
SELECT
film.title film_title,
category.name category_name,
  SUM(rental.rental_id)
FROM film
JOIN film_category
  ON film.film_id = film_category.film_id
JOIN category
  ON category.category_id = film_category.category_id
JOIN rental
  ON rental.rental_id = film.film_id
GROUP BY 1,
         2
ORDER BY 3 DESC


/* Question 2 :

 Now we need to know how the length of rental duration of these family-friendly movies compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories?

 Make sure to also indicate the category that these family-friendly movies fall into.

Direction for query formation: If you correctly split your data. You should only need the category, film_category, and film tables to answer this.*/


/*Query 2/*
SELECT f.title, c.name, f.rental_duration, NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
FROM film_category fc
JOIN category c
ON c.category_id = fc.category_id
JOIN film f
ON f.film_id = fc.film_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
ORDER BY 3



/* Question 3: 
Finally, provide a table with the family-friendly film category, each of the quartiles, and the corresponding count of movies within each combination of film category for each 
corresponding rental duration category. The resulting table should have three columns:

a. Category
b. Rental length category
c. Count

Direction for query formation: The Count column should be sorted first by Category and then by Rental Duration category.*/

/*Query 3/*

SELECT
  category_name,
  quartiles,
  COUNT(category_name)
FROM (SELECT
  c.name category_name,
  NTILE(4) OVER (ORDER BY f.rental_duration) AS quartiles
FROM film f
JOIN film_category fc
  ON f.film_id = fc.film_id
JOIN category c
  ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')) t1
GROUP BY 1,
         2
ORDER BY 1, 2


/* Question 2.2:
 We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007, and what was the amount of the monthly payments. Can you write a query to capture the customer name, month and year of payment, and total payment amount for each month by these top 10 paying customers?*/


 WITH top_paying_customers AS (
  SELECT C.customer_id,
  SUM(p.amount) AS total_payment
 FROM customer c
 JOIN payment p
 USING (customer_id)
 GROUP BY 1
 ORDER BY 2 DESC
 LIMIT 10
 )

 SELECT c.first_name || ' ' || c.last_name AS customer_name,
 DATE_TRUNC('month', p.payment_date) AS payment_month,
 COUNT(p.payment_id) AS num_payments,
 SUM(p.amount) AS total_payment
 FROM customer c
 JOIN payment p
 USING (customer_id)
 JOIN top_paying_customers
 USING (customer_id)
   GROUP BY 1, 2
   ORDER BY 1, 2
